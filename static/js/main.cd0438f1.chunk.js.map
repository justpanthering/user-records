{"version":3,"sources":["Containers/Users/Users.module.css","Components/User/User.module.css","Components/Toolbar/Toolbar.module.css","Assets/UI/Table/TableHeading/TableHeading.module.css","Components/Toolbar/Toolbar.js","Assets/UI/PaginationItem/PaginationItem.js","Components/Pagination/Pagination.js","Assets/UI/Table/TableHeading/TableHeading.js","Context/UsersContext/UsersContext.js","Assets/UI/Form/Form.js","Containers/Users/Users.js","Components/User/UserData/UserData.js","Components/User/User.js","Components/Body/Body.js","Components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","toolbar","className","Styles","Toolbar","Logo","paginationItem","props","Pagination","Item","onClick","clickPage","page","pagination","currPage","First","disabled","Prev","pageClick","PaginationItem","Ellipsis","active","Math","ceil","dataCount","resultPerPage","Next","Last","tableHeading","iconClass","Icon","join","TableHeading","children","aria-hidden","DataContext","createContext","UpdateDataContext","SortDataContext","SearchDataContext","useData","useContext","DataProvider","useState","data","subData","sortType","error","query","setData","sortDataHelper","dataToSort","type","field","sort","a","b","useEffect","Axios","get","then","response","catch","console","log","message","Provider","value","newData","length","filter","user","first_name","toLowerCase","includes","last_name","Form","setQuery","seachQueryHandler","id","placeholder","onChange","event","target","preventDefault","Users","setCurrPage","receivedData","sortDataHandler","tableJSX","errorJSX","slice","map","key","to","age","email","href","web","Alert","variant","dismissible","Heading","Container","SearchForm","Table","scope","gotoPage","userData","label","User","useParams","userDataJSX","forEach","parseInt","UserData","company_name","city","state","zip","Header","Back","Body","body","exact","path","render","component","layout","App","Layout","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd0438f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Users\":\"Users_Users__3bdt9\",\"Table\":\"Users_Table__35LK5\",\"Pagination\":\"Users_Pagination__2roxS\",\"SearchForm\":\"Users_SearchForm__2Jv_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"User\":\"User_User__et_Hq\",\"Body\":\"User_Body__2rGNd\",\"Back\":\"User_Back__2dq4A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3SeYc\",\"Logo\":\"Toolbar_Logo__3GrLL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableHeading\":\"TableHeading_TableHeading__1b8_c\",\"Icon\":\"TableHeading_Icon__2S-l8\"};","import React from 'react';\nimport { Link } from 'react-router-dom'\n\n// Style\nimport Styles from './Toolbar.module.css';\n\nconst toolbar = () => {\n  return (\n    <div className={Styles.Toolbar}>\n      <h2 className={Styles.Logo}>User Records</h2>\n    </div>\n  )\n}\n\nexport default toolbar;","import React from 'react';\nimport { Pagination } from 'react-bootstrap';\n\nconst paginationItem = props => {\n  return (\n    <Pagination.Item\n      onClick={() => props.clickPage(props.page)}>\n      {props.page}\n    </Pagination.Item>\n  )\n}\n\nexport default paginationItem;","import React, { Fragment } from 'react';\nimport PaginationItem from '../../Assets/UI/PaginationItem/PaginationItem';\n\nimport { Pagination } from 'react-bootstrap'\n\nconst pagination = props => {\n\n  return (\n    <Pagination>\n      {props.currPage <= 3\n        ?\n        <Fragment>\n          <Pagination.First disabled />\n          {props.currPage === 1\n            ?\n            <Pagination.Prev disabled />\n            :\n            <Pagination.Prev\n              onClick={() => { props.pageClick(props.currPage - 1) }} />\n          }\n        </Fragment>\n        :\n        <Fragment>\n          <Pagination.First\n            onClick={() => { props.pageClick(1) }} />\n          <Pagination.Prev\n            onClick={() => { props.pageClick(props.currPage - 1) }} />\n\n          <PaginationItem\n            page={1}\n            clickPage={props.pageClick} />\n          <Pagination.Ellipsis disabled />\n        </Fragment>\n      }\n\n      {props.currPage - 2 > 0\n        ?\n        <PaginationItem\n          page={props.currPage - 2}\n          clickPage={props.pageClick} />\n        : null\n      }\n      {props.currPage - 1 > 0\n        ?\n        <PaginationItem\n          page={props.currPage - 1}\n          clickPage={props.pageClick} />\n        : null\n      }\n\n      <Pagination.Item active>\n        {props.currPage}\n      </Pagination.Item>\n\n\n      {props.currPage + 1 <= Math.ceil(props.dataCount / props.resultPerPage)\n        ?\n        <PaginationItem\n          page={props.currPage + 1}\n          clickPage={props.pageClick} />\n        : null}\n      {props.currPage + 2 <= Math.ceil(props.dataCount / props.resultPerPage)\n        ?\n        <PaginationItem\n          page={props.currPage + 2}\n          clickPage={props.pageClick} />\n        : null\n      }\n\n      {\n        props.currPage < Math.ceil(props.dataCount / props.resultPerPage) - 2\n          ?\n          <Fragment>\n            <Pagination.Ellipsis disabled />\n            <PaginationItem\n              page={Math.ceil(props.dataCount / props.resultPerPage)}\n              clickPage={props.pageClick} />\n            <Pagination.Next\n              onClick={() => { props.pageClick(props.currPage + 1) }} />\n            <Pagination.Last\n              onClick={() => { props.pageClick(Math.ceil(props.dataCount / props.resultPerPage)) }} />\n          </Fragment>\n          :\n          <Fragment>\n            {props.currPage === props.dataCount / props.resultPerPage\n              ?\n              <Pagination.Next disabled />\n              :\n              <Pagination.Next\n                onClick={() => { props.pageClick(props.currPage + 1) }} />\n            }\n\n            <Pagination.Last disabled />\n          </Fragment>\n      }\n    </Pagination>\n  )\n}\n\nexport default pagination;","import React from 'react';\nimport Styles from './TableHeading.module.css';\n\n\nconst tableHeading = (props) => {\n  const iconClass = [\"fa fa-sort\", Styles.Icon].join(\" \");\n  return (\n    <div\n      className={Styles.TableHeading}>\n      <span>\n        {props.children}\n      </span>\n      <i className={iconClass}\n        aria-hidden=\"true\"></i>\n    </div>\n  )\n}\n\nexport default tableHeading;","import React, { useState, useContext, createContext, useEffect } from 'react';\n\nimport Axios from 'axios';\n\n// CONTEXTS\nconst DataContext = createContext();\nconst UpdateDataContext = createContext();\nconst SortDataContext = createContext();\nconst SearchDataContext = createContext();\n\n// CUSTOM HOOKS TO USE CONTEXT\nexport const useData = () => {\n  return useContext(DataContext);\n}\n\nexport const useDataUpdate = () => {\n  return useContext(UpdateDataContext);\n}\n\nexport const useDataSort = () => {\n  return useContext(SortDataContext);\n}\n\nexport const useDataSearch = () => {\n  return useContext(SearchDataContext);\n}\n\n// Provider\nexport const DataProvider = ({ children }) => {\n\n  const [data, setData] = useState({\n    data: [],\n    subData: [],\n    sortType: null,\n    error: null,\n    query: \"\"\n  });\n\n\n  // HANDLERS\n  const updateDataHandler = (newData) => {\n    setData({\n      ...data,\n      data: newData\n    })\n  }\n\n  const sortDataHandler = (field) => {\n\n    setData(data.subData.length === 0\n      ? {\n        ...data,\n        data: sortDataHelper(data.data, data.sortType, field),\n        sortType: data.sortType === null || data.sortType === \"descending\"\n          ? \"ascending\"\n          : \"descending\"\n      }\n      : {\n        ...data,\n        subData: sortDataHelper(data.subData, data.sortType, field),\n        sortType: data.sortType === null || data.sortType === \"descending\"\n          ? \"ascending\"\n          : \"descending\"\n      })\n  }\n  const sortDataHelper = (dataToSort, type, field) => {\n    dataToSort.sort((a, b) => {\n      if (type === null || type === \"descending\") {\n        if (a[field] < b[field])\n          return -1;\n        if (a[field] > b[field])\n          return 1;\n        return 0;\n      }\n      else {\n        if (a[field] > b[field])\n          return -1;\n        if (a[field] < b[field])\n          return 1;\n        return 0;\n      }\n    })\n    return dataToSort;\n  }\n\n  const searchDataHandler = (query) => {\n    if (query === \"\") {\n      setData({\n        ...data,\n        subData: []\n      })\n    }\n    else {\n      const subData = data.data.filter(user => {\n        if (user.first_name.toLowerCase().includes(query.toLowerCase()) || user.last_name.toLowerCase().includes(query.toLowerCase())) {\n          return user;\n        }\n      })\n      setData({\n        ...data,\n        subData: subData,\n        query: query\n      })\n    }\n  }\n\n  // API call after first render\n  useEffect(() => {\n    Axios.get(\"https://datapeace-storage.s3-us-west-2.amazonaws.com/dummy_data/users.json\")\n      .then(response => {\n        // console.log(response.data);\n        setData({\n          ...data,\n          data: response.data,\n          error: null\n        });\n      })\n      .catch(error => {\n        console.log(error);\n        setData({\n          ...data,\n          error: error.message\n        })\n      })\n  }, [])\n\n  // WRAP ALL COMPONENTS IN CONTEXT\n  return (\n    <DataContext.Provider\n      value={data}>\n      <UpdateDataContext.Provider\n        value={updateDataHandler}>\n        <SortDataContext.Provider\n          value={sortDataHandler}>\n          <SearchDataContext.Provider\n            value={searchDataHandler}>\n            {children}\n          </SearchDataContext.Provider>\n        </SortDataContext.Provider>\n      </UpdateDataContext.Provider>\n    </DataContext.Provider>\n  )\n}","import React, { useState } from 'react';\nimport { useDataSearch, useData } from '../../../Context/UsersContext/UsersContext';\n\nconst Form = () => {\n  const data = useData();\n  const [query, setQuery] = useState(data.query);\n  const seachQueryHandler = useDataSearch();\n\n  return (\n    <form className=\"form-inline\">\n      <div className=\"form-group mr-sm-3 mb-2\">\n        <input type=\"text\"\n          className=\"form-control\"\n          id=\"inputSearch\"\n          placeholder=\"Search by First or Last Name\"\n          value={query}\n          onChange={(event) => {\n            seachQueryHandler(event.target.value);\n            setQuery(event.target.value)\n          }} />\n      </div>\n      <button\n        onClick={(event) => {\n          event.preventDefault();\n          seachQueryHandler(query);\n        }}\n        className=\"btn btn-primary mb-2\">Search</button>\n    </form>\n  )\n}\n\nexport default Form;","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Styles from './Users.module.css';\nimport { Container, Alert } from 'react-bootstrap';\n\n// Components\nimport Pagination from '../../Components/Pagination/Pagination';\nimport TableHeading from '../../Assets/UI/Table/TableHeading/TableHeading';\nimport Form from '../../Assets/UI/Form/Form';\n\n// Context\nimport { useData, useDataSort } from '../../Context/UsersContext/UsersContext';\n\nconst Users = () => {\n\n  const [currPage, setCurrPage] = useState(1);\n  const [data, setData] = useState([]);\n\n  let receivedData = useData();\n  let sortDataHandler = useDataSort();\n\n  useEffect(() => {\n    setData(\n      receivedData.subData.length > 0\n        ? receivedData.subData\n        : receivedData.data\n      // receivedData.data\n    )\n  }, [receivedData]);\n\n  const resultPerPage = 10;\n\n  const error = receivedData.error\n\n  const paginationHandler = (gotoPage) => {\n    console.log(\"changing page\");\n    setCurrPage(gotoPage);\n  }\n\n  let tableJSX = null;\n  let errorJSX = null;\n  if (data.length > 0) {\n    tableJSX = data.slice((currPage - 1) * resultPerPage, currPage * resultPerPage).map(user => {\n      return (\n        <tr key={user.id}>\n          <td>\n            <Link to={`/user/${user.id}`}>\n              {user.first_name}\n            </Link>\n          </td>\n          <td>{user.last_name}</td>\n          <td>{user.age}</td>\n          <td>{user.email}</td>\n          <td>\n            <a href={user.web}\n              target=\"_blank\">\n              {user.web}\n            </a>\n          </td>\n        </tr>\n      )\n    })\n  }\n  else {\n    errorJSX =\n      <Alert variant=\"danger\" dismissible>\n        <Alert.Heading>Connection Error!!!</Alert.Heading>\n        <p>\n          {error}\n        </p>\n      </Alert>\n  }\n\n  return (\n    <Container className={Styles.Users}>\n      <div className={Styles.Heading}>\n        <h3>Users</h3>\n      </div>\n\n      <div className={Styles.SearchForm}>\n        <Form />\n        <span>{data.length} User(s) Found!</span>\n      </div>\n\n      <div className={Styles.Table}>\n        {errorJSX}\n        <table className=\"table table-hover\">\n          <thead>\n            <tr>\n              <th\n                scope=\"col\"\n                onClick={() => { sortDataHandler(\"first_name\") }}>\n                <TableHeading>\n                  First Name\n                  </TableHeading>\n              </th>\n              <th\n                scope=\"col\"\n                onClick={() => { sortDataHandler(\"last_name\") }}>\n                <TableHeading>\n                  Last Name\n                  </TableHeading>\n              </th>\n              <th\n                scope=\"col\"\n                onClick={() => { sortDataHandler(\"age\") }}>\n                <TableHeading>\n                  Age\n                  </TableHeading>\n              </th>\n              <th\n                scope=\"col\"\n                onClick={() => { sortDataHandler(\"email\") }}>\n                <TableHeading>\n                  Email\n                  </TableHeading>\n              </th>\n              <th\n                scope=\"col\"\n                onClick={() => { sortDataHandler(\"web\") }}>\n                <TableHeading>\n                  Website\n                  </TableHeading>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            {tableJSX}\n          </tbody>\n        </table>\n      </div>\n      <div className={Styles.Pagination}>\n        {data.length > 0\n          ?\n          <Pagination\n            currPage={currPage}\n            pageClick={paginationHandler}\n            dataCount={data.length}\n            resultPerPage={resultPerPage}\n          />\n          :\n          null}\n      </div>\n    </Container>\n  )\n}\n\nexport default Users;","import React from 'react';\n\nconst userData = props => {\n  return (\n    <div>\n      <span>{props.label}</span>\n      <span>: </span>\n      <span><strong>{props.value}</strong></span>\n    </div>\n  )\n}\n\nexport default userData;","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport { useParams, Link } from 'react-router-dom';\n\nimport Styles from './User.module.css';\n\n// Component\nimport UserData from './UserData/UserData';\n\n// Context\nimport { useData } from '../../Context/UsersContext/UsersContext';\n\nconst User = props => {\n\n  const data = useData().data;\n  const id = useParams().id;\n\n  let userDataJSX = null;\n  data.forEach(user => {\n    if (user.id === parseInt(id)) {\n      userDataJSX =\n        <div>\n          <UserData\n            label={\"First Name\"}\n            value={user.first_name} />\n          <UserData\n            label={\"Last Name\"}\n            value={user.last_name} />\n          <UserData\n            label={\"Age\"}\n            value={user.age} />\n          <UserData\n            label={\"Company Name\"}\n            value={user.company_name} />\n          <UserData\n            label={\"City\"}\n            value={user.city} />\n          <UserData\n            label={\"State\"}\n            value={user.state} />\n          <UserData\n            label={\"Zip\"}\n            value={user.zip} />\n          <UserData\n            label={\"Email\"}\n            value={user.email} />\n          <UserData\n            label={\"Web\"}\n            value={user.web} />\n\n        </div>\n    }\n  });\n\n  return (\n    <Container className={Styles.User}>\n      <div className={Styles.Header}>\n        <Link\n          className={Styles.Back}\n          to=\"/user\">\n          <i className=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n        </Link>\n        <h3>User Details</h3>\n      </div>\n      <div className={Styles.Body}>\n        {userDataJSX}\n      </div>\n    </Container>\n  )\n}\n\nexport default User;","import React from 'react';\n\n// CONTAINERS & COMPONENTS\nimport Users from '../../Containers/Users/Users';\nimport User from '../../Components/User/User';\n\n// CONTEXT\nimport { DataProvider } from '../../Context/UsersContext/UsersContext';\n\nimport { BrowserRouter, Redirect, Route, Switch } from 'react-router-dom';\n\nconst body = () => {\n  return (\n    <DataProvider>\n      <BrowserRouter>\n        <Switch>\n\n          <Route\n            exact\n            path=\"/user-records\"\n            render={() => {\n              return (\n                <Redirect\n                  to=\"/user\"\n                />)\n            }} />\n\n          <Route\n            path=\"/user/:id\"\n            component={User} />\n\n          <Route\n            path=\"/user\" component={Users} />\n        </Switch>\n      </BrowserRouter>\n    </DataProvider>\n  )\n}\n\nexport default body;","import React, { Fragment } from 'react'\n\n// Components\nimport Toolbar from '../Toolbar/Toolbar';\nimport Body from '../Body/Body';\n\nconst layout = () => {\n  return (\n    <Fragment>\n      <Toolbar />\n      <Body />\n    </Fragment>\n  )\n}\n\nexport default layout;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// COMPONENTS\nimport Layout from './Components/Layout/Layout';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Layout />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}